"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var CourseRepository_1 = require("../../infrastructure/repositories/CourseRepository");
var CreateCourseUseCase_1 = require("../../core/use-cases/course-usecases/CreateCourseUseCase");
var GetCourseDetailsUseCase_1 = require("../../core/use-cases/course-usecases/GetCourseDetailsUseCase");
var GetAllCoursesUseCase_1 = require("../../core/use-cases/course-usecases/GetAllCoursesUseCase");
var CourseController_1 = require("../controllers/course-controllers/CourseController");
var UpdateCourseUseCase_1 = require("../../core/use-cases/course-usecases/UpdateCourseUseCase");
var JwtService_1 = require("../../infrastructure/external-services/JwtService");
var UserRepository_1 = require("../../infrastructure/repositories/UserRepository");
var GetUserDetailsUseCase_1 = require("../../core/use-cases/user-usecases/GetUserDetailsUseCase");
var authMiddleware_1 = require("../middleware/authMiddleware");
var enums_1 = require("../../core/entities/misc/enums");
var courseRouter = express_1.default.Router();
var courseRepository = new CourseRepository_1.CourseRepository();
var createCourseUseCase = new CreateCourseUseCase_1.CreateCourseUseCase(courseRepository);
var getCourseDetailsUseCase = new GetCourseDetailsUseCase_1.GetCourseDetailsUseCase(courseRepository);
var updateCourseUseCase = new UpdateCourseUseCase_1.UpdateCourseUseCase(courseRepository);
var getAllCoursesUseCase = new GetAllCoursesUseCase_1.GetAllCoursesUseCase(courseRepository);
var courseController = new CourseController_1.CourseController(createCourseUseCase, getCourseDetailsUseCase, updateCourseUseCase, getAllCoursesUseCase);
var jwtService = new JwtService_1.JwtService();
var userRepository = new UserRepository_1.UserRepository();
var getUserDetailsUseCase = new GetUserDetailsUseCase_1.GetUserDetailsUseCase(userRepository);
var authMiddleware = authMiddleware_1.AuthMiddleware.create(jwtService, getUserDetailsUseCase);
var authorize = authMiddleware_1.AuthMiddleware.authorize([enums_1.UserRole.ADMIN]);
courseRouter.get("/", courseController.getCourses);
courseRouter.get("/:courseId", courseController.getCourseDetails);
courseRouter.post("/add", authMiddleware, authorize, courseController.add);
courseRouter.put("/update", authMiddleware, authorize, courseController.update);
courseRouter.put("/toggle", authMiddleware, authorize, courseController.toggleStatus);
exports.default = courseRouter;
