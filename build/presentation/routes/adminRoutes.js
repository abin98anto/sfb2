"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var adminRouter = express_1.default.Router();
var UserRepository_1 = require("../../infrastructure/repositories/UserRepository");
var GetUsersUseCase_1 = require("../../core/use-cases/admin-usecases/GetUsersUseCase");
var AdminControllers_1 = require("../controllers/admin-controllers/AdminControllers");
var BlockUsersUseCase_1 = __importDefault(require("../../core/use-cases/admin-usecases/BlockUsersUseCase"));
var ApproveTutorUseCase_1 = __importDefault(require("../../core/use-cases/admin-usecases/ApproveTutorUseCase"));
var DenyTutorUseCase_1 = __importDefault(require("../../core/use-cases/admin-usecases/DenyTutorUseCase"));
var NodemailerService_1 = require("../../infrastructure/external-services/NodemailerService");
var authMiddleware_1 = require("../middleware/authMiddleware");
var GetUserDetailsUseCase_1 = require("../../core/use-cases/user-usecases/GetUserDetailsUseCase");
var JwtService_1 = require("../../infrastructure/external-services/JwtService");
var enums_1 = require("../../core/entities/misc/enums");
var userRepository = new UserRepository_1.UserRepository();
var nodemailerService = new NodemailerService_1.NodemailerService();
var jwtService = new JwtService_1.JwtService();
var getUsersUseCase = new GetUsersUseCase_1.GetUsersUseCase(userRepository);
var blockUserUseCase = new BlockUsersUseCase_1.default(userRepository);
var approveTutorUseCase = new ApproveTutorUseCase_1.default(userRepository);
var denyTutorUseCase = new DenyTutorUseCase_1.default(userRepository, nodemailerService);
var getUserDetailsUseCase = new GetUserDetailsUseCase_1.GetUserDetailsUseCase(userRepository);
var adminController = new AdminControllers_1.AdminController(getUsersUseCase, blockUserUseCase, approveTutorUseCase, denyTutorUseCase);
// const authMiddleware = AuthMiddleware.create(jwtService, getUserDetailsUseCase);
var authenticate = authMiddleware_1.AuthMiddleware.create(jwtService, getUserDetailsUseCase);
var authorize = authMiddleware_1.AuthMiddleware.authorize([enums_1.UserRole.ADMIN]);
// adminRouter.use(authenticate, authorize);
adminRouter.get("/users/:role", adminController.getUsersBasedOnRole);
adminRouter.put("/block/:id", authenticate, authorize, adminController.blockUser);
adminRouter.put("/approve/:id", authenticate, authorize, adminController.approveTutor);
adminRouter.put("/deny/:id", authenticate, authorize, adminController.denyTutor);
exports.default = adminRouter;
