"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var enrollmentRoutes = express_1.default.Router();
var EnrollUserUseCase_1 = __importDefault(require("../../core/use-cases/enrollment-usecases/EnrollUserUseCase"));
var EnrollmentRepository_1 = __importDefault(require("../../infrastructure/repositories/EnrollmentRepository"));
var UpdateCourseUseCase_1 = require("../../core/use-cases/course-usecases/UpdateCourseUseCase");
var CourseRepository_1 = require("../../infrastructure/repositories/CourseRepository");
var GetCourseDetailsUseCase_1 = require("../../core/use-cases/course-usecases/GetCourseDetailsUseCase");
var EnrollmentDetailsUseCase_1 = __importDefault(require("../../core/use-cases/enrollment-usecases/EnrollmentDetailsUseCase"));
var GetAllUseCase_1 = __importDefault(require("../../core/use-cases/enrollment-usecases/GetAllUseCase"));
var UpdateEnrollmentUseCase_1 = __importDefault(require("../../core/use-cases/enrollment-usecases/UpdateEnrollmentUseCase"));
var UsersCoursesUseCase_1 = __importDefault(require("../../core/use-cases/enrollment-usecases/UsersCoursesUseCase"));
var EnrollmentController_1 = __importDefault(require("../controllers/enrollment-controllers/EnrollmentController"));
var JwtService_1 = require("../../infrastructure/external-services/JwtService");
var GetUserDetailsUseCase_1 = require("../../core/use-cases/user-usecases/GetUserDetailsUseCase");
var UserRepository_1 = require("../../infrastructure/repositories/UserRepository");
var authMiddleware_1 = require("../middleware/authMiddleware");
var GetEnrollmentWithoutIdUseCase_1 = __importDefault(require("../../core/use-cases/enrollment-usecases/GetEnrollmentWithoutIdUseCase"));
var ChatRepository_1 = __importDefault(require("../../infrastructure/repositories/ChatRepository"));
var UpdateDetailsUseCase_1 = require("../../core/use-cases/user-usecases/UpdateDetailsUseCase");
var enums_1 = require("../../core/entities/misc/enums");
var enrollmentRepository = new EnrollmentRepository_1.default();
var chatRepository = new ChatRepository_1.default();
var jwtService = new JwtService_1.JwtService();
var userRepository = new UserRepository_1.UserRepository();
var courseRepository = new CourseRepository_1.CourseRepository();
var updateCourseUseCase = new UpdateCourseUseCase_1.UpdateCourseUseCase(courseRepository);
var getCourseDetailsUseCase = new GetCourseDetailsUseCase_1.GetCourseDetailsUseCase(courseRepository);
var getUserDetailsUseCase = new GetUserDetailsUseCase_1.GetUserDetailsUseCase(userRepository);
var authMiddleware = authMiddleware_1.AuthMiddleware.create(jwtService, getUserDetailsUseCase);
var authorize = authMiddleware_1.AuthMiddleware.authorize([enums_1.UserRole.USER]);
var updateDetailsUseCase = new UpdateDetailsUseCase_1.UpdateDetailsUseCase(userRepository);
var enrollUserUseCase = new EnrollUserUseCase_1.default(enrollmentRepository, chatRepository, updateCourseUseCase, getCourseDetailsUseCase, getUserDetailsUseCase, updateDetailsUseCase);
var enrollmentDetailsUseCase = new EnrollmentDetailsUseCase_1.default(enrollmentRepository);
var getAllUseCase = new GetAllUseCase_1.default(enrollmentRepository);
var updateEnrollmentUseCase = new UpdateEnrollmentUseCase_1.default(enrollmentRepository);
var getEnrollmentWithoutIdUseCase = new GetEnrollmentWithoutIdUseCase_1.default(enrollmentRepository);
var usersCoursesUseCase = new UsersCoursesUseCase_1.default(enrollmentRepository);
var enrollmentController = new EnrollmentController_1.default(enrollUserUseCase, enrollmentDetailsUseCase, getAllUseCase, updateEnrollmentUseCase, usersCoursesUseCase, getEnrollmentWithoutIdUseCase);
enrollmentRoutes.post("/add", authMiddleware, authorize, enrollmentController.add);
enrollmentRoutes.get("/user-enrollments/:userId", enrollmentController.getUserCourses);
enrollmentRoutes.put("/update", enrollmentController.update);
enrollmentRoutes.post("/without-id", authMiddleware, enrollmentController.getWithoutId);
enrollmentRoutes.get("/", authMiddleware, enrollmentController.getAll);
enrollmentRoutes.get("/:id", authMiddleware, enrollmentController.getDetails);
enrollmentRoutes.post("/get-enroll-details", authMiddleware, enrollmentController.getEnrollments);
exports.default = enrollmentRoutes;
