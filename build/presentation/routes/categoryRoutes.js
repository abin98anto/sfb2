"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var categoryRouter = express_1.default.Router();
var CategoryController_1 = require("../controllers/course-controllers/CategoryController");
var GetCategoriesUseCase_1 = require("../../core/use-cases/course-usecases/category-usecases/GetCategoriesUseCase");
var CreateCategoryUseCase_1 = require("../../core/use-cases/course-usecases/category-usecases/CreateCategoryUseCase");
var UpdateCategoryUseCase_1 = require("../../core/use-cases/course-usecases/category-usecases/UpdateCategoryUseCase");
var CategoryRepository_1 = require("../../infrastructure/repositories/CategoryRepository");
var authMiddleware_1 = require("../middleware/authMiddleware");
var JwtService_1 = require("../../infrastructure/external-services/JwtService");
var GetUserDetailsUseCase_1 = require("../../core/use-cases/user-usecases/GetUserDetailsUseCase");
var UserRepository_1 = require("../../infrastructure/repositories/UserRepository");
var categoryRepository = new CategoryRepository_1.CategoryRepository();
var getCategoriesUseCase = new GetCategoriesUseCase_1.GetCategoriesUseCase(categoryRepository);
var createCategoryUseCase = new CreateCategoryUseCase_1.CreateCategoryUseCase(categoryRepository);
var updateCategoryUseCase = new UpdateCategoryUseCase_1.UpdateCategoryUseCase(categoryRepository);
var categoryController = new CategoryController_1.CategoryController(getCategoriesUseCase, createCategoryUseCase, updateCategoryUseCase);
var jwtService = new JwtService_1.JwtService();
var userRepository = new UserRepository_1.UserRepository();
var getUserDetailsUseCase = new GetUserDetailsUseCase_1.GetUserDetailsUseCase(userRepository);
var authMiddleware = authMiddleware_1.AuthMiddleware.create(jwtService, getUserDetailsUseCase);
categoryRouter.get("/", categoryController.getAll);
categoryRouter.post("/add", authMiddleware, categoryController.add);
categoryRouter.put("/update", authMiddleware, categoryController.update);
categoryRouter.delete("/delete", authMiddleware, categoryController.softDelete);
exports.default = categoryRouter;
